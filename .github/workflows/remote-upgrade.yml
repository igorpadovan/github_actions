name: Deployment

on:
  pull_request:
    types:
      - closed

jobs:
  get-environments:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    permissions:
      actions: read
    outputs:
      names: ${{ steps.set_env.outputs.names }}
    steps:
      - name: Get environments
        uses: octokit/request-action@v2.3.0
        id: get_env
        with:
          route: GET /repos/${{ github.repository }}/environments?per_page=100 # If we ever have >100 deployments, we'll need to paginate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set output
        id: set_env
        run: echo "names=$(echo $NAMES | jq -c '[.[] | select(startswith("[${{ github.ref_name }}]"))]' -j)" >> $GITHUB_OUTPUT
        env:
          NAMES: ${{ toJson(fromJson(steps.get_env.outputs.data).environments.*.name) }}
          
  upgrade:
    needs:
      - get-environments
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.get-environments.outputs.names) }}
    environment:
      name: ${{ matrix.environment }}

    steps:
      - name: Echo environment
        run: |
          echo "Current environment: ${{ matrix.environment }}}"

      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          
          # Setup Target Server SSH key
          echo "${{ secrets.TARGET_SSH_PRIVATE_KEY }}" > ~/.ssh/target_key
          chmod 600 ~/.ssh/target_key
          
          # Create SSH config file
          cat > ~/.ssh/config << EOF
          Host target
            HostName ${{ vars.TARGET_HOST }}
            User ${{ vars.TARGET_USER }}
            IdentityFile ~/.ssh/target_key
            StrictHostKeyChecking no
          EOF
          
          # If bridge host is configured, add bridge configuration
          if [ ! -z "${{ vars.BRIDGE_HOST }}" ]; then
            echo "${{ secrets.BRIDGE_SSH_PRIVATE_KEY }}" > ~/.ssh/bridge_key
            chmod 600 ~/.ssh/bridge_key
            
            # Add bridge configuration
            cat >> ~/.ssh/config << EOF
          
          Host bridge
            HostName ${{ vars.BRIDGE_HOST }}
            User ${{ vars.BRIDGE_USER }}
            IdentityFile ~/.ssh/bridge_key
            StrictHostKeyChecking no
          
          # Update target configuration to use bridge
          Host target
            ProxyCommand ssh -W %h:%p bridge
          EOF
          fi
          
          chmod 600 ~/.ssh/config

      - name: Execute Remote Command
        run: |
          ssh target "cd ${{ vars.APP_DIRECTORY }} && make upgrade_seadoc"